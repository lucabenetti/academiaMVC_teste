@page
@model CS.Api.Pages.Treino.VisualizarTreinoModel
@{
    Layout = "_LayoutPage";
    ViewData["tituloFuncao"] = "Visualizar treino do dia";
}
<style>
    .border_exercicios
    {
        border: solid 2px;
        border-color: var(--secondary-dark);
        box-shadow: 2px 4px 9px var(--bs-body-color);
    }
    .font-p
    {
        font-weight: bold !important;
    }
    li::marker{
        font-size: 15pt;
    }
</style>

<h2 id="texto_treino" class="mb-4"></h2>

<div class="row">
    <div class="col-xl-5">
        <div id="container_exercicios" class="border_exercicios">

        </div>
    </div>
</div>

<script defer>
    window.addEventListener('load', () => {
        gravar.classList.add("d-none");
        consulteTreinoAluno();
    });

    async function consulteTreinoAluno() {
        const url = '@Url.Action("ObterPorDia", "Treino")';
        const resposta = await postJSON(url, {}, "GET");

        if (resposta && resposta.success) 
        {
            const textoTreino = document.getElementById('texto_treino');
            textoTreino.innerHTML = resposta.data.exercicios.length > 0 ? "Olá, seu treino de hoje contem os seguintes exercícios" : "Nenhum treino cadastrado para hoje";
            monteTreino(resposta.data);
        }
    }

    function monteTreino(treino) {
        const containerLista = document.getElementById('container_exercicios');
        const ol = h('ol', {});
        treino.exercicios.forEach(ex => {
            const descricao = h('p', {class: "ms-4 font-p"});
            descricao.innerHTML = ex.descricao;
            const li = h('li', {class: 'mt-3'}, descricao);
            ol.appendChild(li);
            containerLista.appendChild(ol);
        });
    }
</script>
