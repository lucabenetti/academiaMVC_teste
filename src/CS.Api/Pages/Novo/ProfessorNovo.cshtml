@page
@using Newtonsoft.Json
@model CS.Api.Pages.Novo.ProfessorNovoModel
@{
    Layout = "_CadastroEntidade";
    ViewData["tituloFuncao"] = "Cadastro de professor";
    var professorEdicao = ViewData["professor"] != null ? JsonConvert.SerializeObject(ViewData["professor"]) : "''";
}

<partial name="_ModalAdicionarEndereco" model="new CS.Api.Pages.Novo._ModalAdicionarEndereco()" />
<div class="row">
    <div class="col-xl-4">
        <label for="Nome" class="d-flex form-label">Nome</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input type="text" id="Nome" name="Nome" class="form-control" value="" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <label for="CPF" class="d-flex form-label">CPF</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input type="text" maxlength="11" id="CPF" name="CPF" class="form-control" value="" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <label for="DataNascimento" class="d-flex form-label">Data de nascimento</label>
        <div class="form-group" data="">
            <div class="input-group input-date" id="DataInicial_container" data-target-input="nearest">
                <input type="text" maxlength="10" id="DataNascimento" name="DataNascimento" class="form-control date datepicker-input" data-target="#DataInicial_container" value="" data-mask="date" autocomplete="off">
                <div class="input-group-append" data-target="#DataInicial_container">
                    <button type="button" class="btn btn-outline-primary py-2 my-0 px-4 " data-bs-toggle="tooltip" tabindex="-1">
                        <i class=" fa fa-calendar"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-xl-4">
        <label for="Email" class="d-flex form-label">Email</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input type="text" id="Email" name="Email" class="form-control" value="" autocomplete="off">
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <label for="Senha" class="d-flex form-label">Senha</label>
        <div class="form-group">
            <div class="input-group">
                <input type="password" id="Senha" name="Senha" class="form-control">
                <div class="input-group-append">
                    <button type="button" class="btn btn-outline-primary py-2 my-0 px-4 " title="Visualizar a senha" data-bs-toggle="tooltip" onclick="visualizeSenha(this, event)" tabindex="-1">
                        <i style="color: black;" class="fa fa-eye-slash"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-4">
        <label for="Endereco" class="d-flex form-label">Endereço</label>
        <div class="form-group" data="">
            <div class="input-group" data-target-input="nearest">
                <input readonly type="text" maxlength="11" id="Endereco" name="Endereco" class="form-control" value="" autocomplete="off">
                <div class="input-group-append" style="@(professorEdicao == "''" ? "background: var(--success);" : "background: var(--warning);")">
                    <button type="button" class="btn py-2 my-0 px-4 " title="@(professorEdicao == "''" ? "Adicionar endereco" : "Editar endereco")" 
                        data-bs-toggle="tooltip" tabindex="-1" onclick="adicionarEndereco(event)">
                        <i style="color: white;" class="@(professorEdicao == "''" ? "fa fa-plus" : "fa fa-pencil")"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-xl-2">
            <label for="Peso" class="d-flex form-label">Peso</label>
            <div class="form-group">
                <div class="input-group" data-target-input="nearest">
                    <input type="text" id="Peso" name="Peso" class="form-control" value="" autocomplete="off" data-mask="peso" maxlength="5" onkeyup="aoDigitarPeso(event)">
                </div>
            </div>
        </div>
        <div class="col-xl-2">
            <label for="Altura" class="d-flex form-label">Altura</label>
            <div class="form-group">
                <div class="input-group" data-target-input="nearest">
                    <input type="text" id="Altura" name="Altura" class="form-control" value="" autocomplete="off" data-mask="altura" maxlength="4">
                </div>
            </div>
        </div>
    </div>
</div>

<script defer>
let professor;

EventDomContentLoaded(() => {
    const botaoCancelar = document.getElementById('cancelar');
    botaoCancelar.addEventListener('click', (ev) => {
        ev.preventDefault();
        new Modal().confirmacao("Tem certeza que deseja cancelar o cadastro ?", () => {
            window.location.href = '/Cadastro/Professor';
        }).render();
    })
    const botaoCadastrar = document.getElementById('gravar');
    botaoCadastrar.addEventListener('click', gravarCadastro);

    ajusteProfessorContextoEdicao();
});

function ajusteProfessorContextoEdicao() {
    professor = @Html.Raw(professorEdicao);
    if (professor) {
        Nome.value = professor.Nome || "";
        DataNascimento.value = professor.DataNascimento.convertaStrLocaleToDate().convertaDateToStrDiaMesAno()
        CPF.value = professor.Cpf || "";
        Email.value = professor.Email || "";
        Senha.disabled = true;
        Peso.value = professor.Peso || "";
        Altura.value = professor.Altura?.toString().replace(".", ",") || "";

        preenchaEnderecoEdicao(professor.Endereco);
    }
}

function preenchaEnderecoEdicao(endereco) {
    const option = Array.from(Estado.options).find(estado => estado.value == endereco.Estado);

    Endereco.value = `${endereco.Bairro}-${endereco.Cidade}-${option.text}`;
    CEP.value = endereco.CEP;
    Logradouro.value = endereco.Logradouro;
    Estado.value = endereco.Estado;
    Complemento.value = endereco.Complemento;
    Bairro.value = endereco.Bairro;
    Cidade.value = endereco.Cidade;
    Numero.value = endereco.Numero;
}

async function gravarCadastro(ev) {
    ev.preventDefault();

    const url = '@Url.Action("Adicionar", "Professor")';
    const urlEdicao = '@Url.Action("Atualizar", "Professor")';
    const ehEdicao = professor != "";

    const data = {
        Nome: Nome.value,
        Cpf: CPF.value,
        DataNascimento: DataNascimento.value.convertaStrLocaleToDate(),
        Email: Email.value,
        Senha: Senha.value,
        Endereco: obtenhaEndereco(),
        Altura: Altura.value ? parseFloat(Altura.value.replace(',', '.')) : 0,
        Peso: Peso.value ? parseFloat(Peso.value.replace(',', '.')) : 0,
    }
    if (ehEdicao) {
        data.Id = professor.Id;
    }
    const resposta = ehEdicao ? await postJSON(url, data, "PUT") : await postJSON(urlEdicao, data);
    if (resposta && resposta.success) {
        new Modal().sucesso(ehEdicao ? "Professor editado com sucesso" : "Professor cadastrado com sucesso").depoisDeOcultar(() => {
            window.location.href = '/Cadastro/Professor';
        }).render();
    }
}

function adicionarEndereco(ev){
    ev.preventDefault();
    ev.stopPropagation();

    modalAdicionarEndereco.show();
}

function aoDigitarPeso(ev) {
    if (isNaN(ev.key) && ev.key != ",") {
        ev.target.value = "";
        return;
    }
}
</script>